# Node.js のLTSバージョンをベースイメージとして使用
FROM node:20-slim

# アプリケーションコードをコンテナにコピー
# .dockerignore を使用して不要なファイルを除外することを推奨
COPY . /app

# 作業ディレクトリを設定
WORKDIR /app

# npmキャッシュをビルド間で再利用できるよう設定
# --mount=type=cache を使っているので、Railwayが自動でやってくれる可能性もあるが、明示的に記述
# RailwayのDockerビルドは通常、この行がなくてもキャッシュを活用します。
# ただし、この問題の根本原因は権限なので、以下のRUNコマンドは重要です。

# 依存関係をインストールし、アプリケーションをビルド
# ここで --force を使うのは、tscのパーミッション問題を一時的に回避するため。
# 通常は不要ですが、Railwayの環境で特別なパーミッション問題がある場合は有効です。
# ただし、まずは通常のnpm install && npm run buildで試すのが基本です。

# ★重要★ Railwayの内部挙動を考慮し、以下のようにします。
# COPYの前にWORKDIRを設定し、npm installを実行するのが一般的で確実です。
# もし`tsc`のパーミッション問題が続く場合、ユーザーの変更を検討します。

# 現在の状況では、tscが見つからない、または実行できないことが問題なので、
# まずは基本的なDockerビルドプロセスを確立します。
# ほとんどの場合、次のステップで解決します。

# 依存関係のインストール
RUN npm install

# アプリケーションのビルド
RUN npm run build

# アプリケーションがリッスンするポート
EXPOSE 8080

# アプリケーションの起動コマンド
CMD [ "npm", "start" ]